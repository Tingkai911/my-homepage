{
    "heading": {
        "name": "Ting Kai Chua",
        "whatido": "A hobbyist developer working towards becoming a full-time software engineer."
    },
    "about": {
        "moreAboutMe1": "I build new projects just to tickle my brain & learn about new technologies.",
        "moreAboutMe2": "Graduated from NUS Bachelor of Electrical Engineering in 2019. Previously worked as a Marketing & Sales Engineer. Currently studying at NUS-ISS Graduate Diploma in System Analysis.",
        "topExpertise": "Fullstack developer who is familiar with different technologies",
        "upTo10Skills": [
            "Python", "Django", "JavaScript", "React", "Express/Node.js",
            "C/C#", "ASP.NET Core", "Java", "SQL(SQL Server/MySQL)", "MongoDB"
        ],
        "contactMe": {
            "linkedin": "https://www.linkedin.com/in/ting-kai-chua-196211189/",
            "linkedinUsername": "Ting Kai Chua",
            "twitter": "https://twitter.com/TingKaiChua",
            "twitterUsername": "TingKaiChua",
            "email": "tingkai911@gmail.com",
            "mobile": "+65 9088 9681"
        },
        "github": "https://github.com/Tingkai911"
    },
    "project": [
        {
            "projectTitle": "CS50 Blog",
            "projectIntro": "An functioninal blogging website build using Django, HTML/CSS with Bootstrap 4.",
            "paragraph1": "This was a project I build in 2020 when I first learned the basics of programming and web design from Havard's CS50x. This was the project that get me interested in Full Stack Web Development. I build CS50 Blog to mimic the common functionalities that modern blogging and social media webpages can do.",
            "paragraph2": "User can view the blog posts without creating an account. Creating an account allows users to create their own blog posts, create a customise profile (such as uploading their own profile picture and toggle between light/dark mode), leave like/dislike and comments on other users's blog posts. There is also a password reset option in case users forgets their password.",
            "paragraph3": "CS50 Blog is currently hosted on Heroku with static files such as profile images of each user is stored in an AWS S3 bucket.",
            "technologiesUsed": [
                "Python", "Django", "HTML/CSS", "Bootstrap 4", "JavaScript", "jQuery", "Heroku", "AWS (S3)"
            ],
            "githubLink": "https://github.com/Tingkai911/CS50Blog",
            "hostLink": "https://cs50-final-project-blog.herokuapp.com/",
            "disclaimer": "Please allow a while for CS50 Blog to load as it is hosted on a free dyno on Heroku."
        },
        {
            "projectTitle": "Proshop",
            "projectIntro": "Ecommecre website build using the MERN (MongoDB, Express, React and Node.js) stack.",
            "paragraph1": "The is project is based on the Udemy course by Brad Traversy - MERN eCommerce From Scratch. This project increased my understanding of using JavaScript frameworks and libraries to build projects and provides a boilerplate for future eCommerce projects using MERN stack.",
            "paragraph2": "Proshop has full featured shopping cart with PayPal & credit/debit payments; product rating & review system; admin area to manage customers, products & orders; product search, carousel, pagination & more.",
            "paragraph3": "Proshop is currently hosted on Heroku.",
            "technologiesUsed": [
                "JavaScript", "HTML/CSS", "MongoDB", "Express js", "React js", "Node.js", "React Bootstrap", "Heroku"
            ],
            "githubLink": "https://github.com/Tingkai911/proshop",
            "hostLink": "https://tingkai911-proshop.herokuapp.com/",
            "disclaimer": "Please allow a while for Proshop to load as it is hosted on a free dyno on Heroku."
        },
        {
            "projectTitle": "Meme Generator",
            "projectIntro": "A simple and easy to use Meme Generator build using React. Gets meme images from an API.",
            "paragraph1": "This was a project I build to learn and experiment with the popular React Framework.",
            "paragraph2": "Using JavaScript fetch(), the application get an array of images links from an API. We will choose the index by random to display a random meme image each time the user visit the webpage to make the experience more unpredictable and fun. Users are able to add their own text at the top and bottom rows to create their own meme. Users unsatisfied with the dankest of memes can press the 'Gen' button to change to another random meme image.",
            "paragraph3": "Meme Generator is currently hosted on GitHub Pages.",
            "technologiesUsed": [
                "JavaScript (API)", "React", "HTML/CSS"
            ],
            "githubLink": "https://github.com/Tingkai911/react-meme-generator",
            "hostLink": "https://tingkai911.github.io/react-meme-generator/",
            "disclaimer": ""
        },
        {
            "projectTitle": "Recreating GitHub Jobs page",
            "projectIntro": "Using React and Axios library to recreate GitHub Jobs page with GitHub Jobs API.",
            "paragraph1": "I build this project learn how to integrate APIs into an React Appilcation.",
            "paragraph2": "GitHub API accepts parameters such as description, location, page and full_time as a query string. GitHub Jobs API also supports Pagination by returning 50 search results per API call for each page. Adding a query string may be tedious to do in vanilia JavaScript fetch() method. However, Axios library allows us to pass parameters along with the base URL of the API easily. A proxy server will have to be used to avoid CORS error.",
            "paragraph3": "GitHub Jobs (recreated) is currently hosted on GitHub Pages.",
            "technologiesUsed": [
                "React", "Axios", "React Bootstrap"
            ],
            "githubLink": "https://github.com/Tingkai911/github-jobs",
            "hostLink": "https://tingkai911.github.io/github-jobs/",
            "disclaimer": "More information about GitHub Jobs API: https://jobs.github.com/api"
        }
    ],
    "homepageRepository": "https://github.com/Tingkai911/my-homepage"
}